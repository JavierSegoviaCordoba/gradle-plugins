{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hubdle \u00b6 Usage \u00b6 plugins { id ( \"com.javiersc.hubdle\" ) version \" $ version \" } // basic config to get a Kotlin jvm project with coroutines and a custom dependency hubdle { kotlin { jvm { features { coroutines () } main { dependencies { implementation ( \"org.example:example:1.0.0\" ) } } } } } Configurations \u00b6 Visit the website License \u00b6 Copyright 2022 Javier Segovia C\u00f3rdoba Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at https://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"Overview"},{"location":"#hubdle","text":"","title":"Hubdle"},{"location":"#usage","text":"plugins { id ( \"com.javiersc.hubdle\" ) version \" $ version \" } // basic config to get a Kotlin jvm project with coroutines and a custom dependency hubdle { kotlin { jvm { features { coroutines () } main { dependencies { implementation ( \"org.example:example:1.0.0\" ) } } } } }","title":"Usage"},{"location":"#configurations","text":"Visit the website","title":"Configurations"},{"location":"#license","text":"Copyright 2022 Javier Segovia C\u00f3rdoba Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at https://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"License"},{"location":"CHANGELOG/","text":"Changelog \u00b6 0.5.0-alpha.2 - 2023-03-11 \u00b6 Fixed \u00b6 publishAlways doesn\u2019t check for true or false 0.5.0-alpha.1 - 2023-03-11 \u00b6 Added \u00b6 useOnAllProjects to hubdleSettings extension buildScan to hubdleSettings extension Changed \u00b6 site shows Qodana and Sonar in the navigation bar site doesn\u2019t upload reports to GitHub Pages Fixed \u00b6 PublishToMavenRepository tasks must run after Sign tasks Updated \u00b6 org.jetbrains.intellij.plugins:gradle-intellij-plugin -> 1.13.2 app.cash.molecule:molecule-gradle-plugin -> 0.8.0","title":"Changelog"},{"location":"CHANGELOG/#changelog","text":"","title":"Changelog"},{"location":"CHANGELOG/#050-alpha2-2023-03-11","text":"","title":"0.5.0-alpha.2 - 2023-03-11"},{"location":"CHANGELOG/#fixed","text":"publishAlways doesn\u2019t check for true or false","title":"Fixed"},{"location":"CHANGELOG/#050-alpha1-2023-03-11","text":"","title":"0.5.0-alpha.1 - 2023-03-11"},{"location":"CHANGELOG/#added","text":"useOnAllProjects to hubdleSettings extension buildScan to hubdleSettings extension","title":"Added"},{"location":"CHANGELOG/#changed","text":"site shows Qodana and Sonar in the navigation bar site doesn\u2019t upload reports to GitHub Pages","title":"Changed"},{"location":"CHANGELOG/#fixed_1","text":"PublishToMavenRepository tasks must run after Sign tasks","title":"Fixed"},{"location":"CHANGELOG/#updated","text":"org.jetbrains.intellij.plugins:gradle-intellij-plugin -> 1.13.2 app.cash.molecule:molecule-gradle-plugin -> 0.8.0","title":"Updated"},{"location":"extensions/HUBDLE_EXTENSION/","text":"Hubdle extension Overview \u00b6 hubdle config isEnabled: Property<Boolean> // true enabled(value: Boolean = true) analysis binaryCompatibilityValidator coverage documentation explicitApi format install languageSettings nexus publishing versioning kotlin isEnabled: Property<Boolean> // false enabled(value: Boolean = true) features isEnabled: Property<Boolean> // true enabled(value: Boolean = true) android jvm multiplatform","title":"Hubdle extension Overview"},{"location":"extensions/HUBDLE_EXTENSION/#hubdle-extension-overview","text":"hubdle config isEnabled: Property<Boolean> // true enabled(value: Boolean = true) analysis binaryCompatibilityValidator coverage documentation explicitApi format install languageSettings nexus publishing versioning kotlin isEnabled: Property<Boolean> // false enabled(value: Boolean = true) features isEnabled: Property<Boolean> // true enabled(value: Boolean = true) android jvm multiplatform","title":"Hubdle extension Overview"},{"location":"extensions/config/ANALYSIS/","text":"Analysis \u00b6 Overview \u00b6 analysis isEnabled: Property<Boolean> // false enabled(value: Boolean = true) ignoreFailures: Property<Boolean> includes: SetProperty<String> // \"**/*.kt\", \"**/*.kts\" excludes: SetProperty<String> // \"**/resources/**\", \"**/build/**\" includes(vararg paths: String) excludes(vararg paths: String) reports isEnabled: Property<Boolean> // true enabled(value: Boolean = true) md: Property<Boolean> // true html: Property<Boolean> // true sarif: Property<Boolean> // true txt: Property<Boolean> // true xml: Property<Boolean> // true detekt(action: Action<DetektExtension>) Enable detekt and sonarqube to analyse all projects Configuration \u00b6 It must be configured only in the root project. Basic config \u00b6 hubdle { config { analysis () } } Local properties, environment variables or Gradle properties analysis.sonar.projectKey = com.javiersc.hubdle:hubdle analysis.sonar.projectName = hubdle analysis.sonar.login = user-sonar-token analysis.sonar.host.url = https://sonarcloud.io analysis.sonar.organization = javiersc Any property can be provided in screaming case too: ANALYSIS_SONAR_PROJECT_KEY = com.javiersc.hubdle:hubdle ANALYSIS_SONAR_PROJECT_NAME = hubdle ANALYSIS_SONAR_LOGIN = user-sonar-token ANALYSIS_SONAR_HOST = https://sonarcloud.io ANALYSIS_SONAR_ORGANIZATION = javiersc Advanced config \u00b6 hubdle { config { analysis { isEnabled . set ( true ) ignoreFailure . set ( true ) includes . set ( setOf ( \"**/*.kt\" , \"**/*.kts\" )) excludes . set ( setOf ( \"**/resources/**\" , \"**/build/**\" )) reports { html . set ( true ) sarif . set ( true ) txt . set ( true ) xml . set ( true ) } } } }","title":"Analysis"},{"location":"extensions/config/ANALYSIS/#analysis","text":"","title":"Analysis"},{"location":"extensions/config/ANALYSIS/#overview","text":"analysis isEnabled: Property<Boolean> // false enabled(value: Boolean = true) ignoreFailures: Property<Boolean> includes: SetProperty<String> // \"**/*.kt\", \"**/*.kts\" excludes: SetProperty<String> // \"**/resources/**\", \"**/build/**\" includes(vararg paths: String) excludes(vararg paths: String) reports isEnabled: Property<Boolean> // true enabled(value: Boolean = true) md: Property<Boolean> // true html: Property<Boolean> // true sarif: Property<Boolean> // true txt: Property<Boolean> // true xml: Property<Boolean> // true detekt(action: Action<DetektExtension>) Enable detekt and sonarqube to analyse all projects","title":"Overview"},{"location":"extensions/config/ANALYSIS/#configuration","text":"It must be configured only in the root project.","title":"Configuration"},{"location":"extensions/config/ANALYSIS/#basic-config","text":"hubdle { config { analysis () } } Local properties, environment variables or Gradle properties analysis.sonar.projectKey = com.javiersc.hubdle:hubdle analysis.sonar.projectName = hubdle analysis.sonar.login = user-sonar-token analysis.sonar.host.url = https://sonarcloud.io analysis.sonar.organization = javiersc Any property can be provided in screaming case too: ANALYSIS_SONAR_PROJECT_KEY = com.javiersc.hubdle:hubdle ANALYSIS_SONAR_PROJECT_NAME = hubdle ANALYSIS_SONAR_LOGIN = user-sonar-token ANALYSIS_SONAR_HOST = https://sonarcloud.io ANALYSIS_SONAR_ORGANIZATION = javiersc","title":"Basic config"},{"location":"extensions/config/ANALYSIS/#advanced-config","text":"hubdle { config { analysis { isEnabled . set ( true ) ignoreFailure . set ( true ) includes . set ( setOf ( \"**/*.kt\" , \"**/*.kts\" )) excludes . set ( setOf ( \"**/resources/**\" , \"**/build/**\" )) reports { html . set ( true ) sarif . set ( true ) txt . set ( true ) xml . set ( true ) } } } }","title":"Advanced config"},{"location":"extensions/config/BINARY_COMPATIBILITY_VALIDATOR/","text":"Binary compatibility validator \u00b6 Check if there are any binary compatibility issues. Overview \u00b6 binaryCompatibilityValidator isEnabled: Property<Boolean> // false enabled(value: Boolean = true) apiValidation(action: Action<ApiValidationExtension>) Configuration \u00b6 It must be applied only in the root project. hubdle { config { binaryCompatibilityValidator () } } Tasks \u00b6 ./gradlew checkApi ./gradlew dumpApi","title":"Binary compatibility validator"},{"location":"extensions/config/BINARY_COMPATIBILITY_VALIDATOR/#binary-compatibility-validator","text":"Check if there are any binary compatibility issues.","title":"Binary compatibility validator"},{"location":"extensions/config/BINARY_COMPATIBILITY_VALIDATOR/#overview","text":"binaryCompatibilityValidator isEnabled: Property<Boolean> // false enabled(value: Boolean = true) apiValidation(action: Action<ApiValidationExtension>)","title":"Overview"},{"location":"extensions/config/BINARY_COMPATIBILITY_VALIDATOR/#configuration","text":"It must be applied only in the root project. hubdle { config { binaryCompatibilityValidator () } }","title":"Configuration"},{"location":"extensions/config/BINARY_COMPATIBILITY_VALIDATOR/#tasks","text":"./gradlew checkApi ./gradlew dumpApi","title":"Tasks"},{"location":"extensions/config/COVERAGE/","text":"Coverage \u00b6 Get code coverage with Kover. Overview \u00b6 coverage isEnabled: Property<Boolean> // false enabled(value: Boolean = true) engine: Property<CoverageEngineVariant> // DefaultJacocoEngine kover(action: Action<KoverProjectExtension>) Configuration \u00b6 It must be applied only in the root project. hubdle { config { coverage () } }","title":"Coverage"},{"location":"extensions/config/COVERAGE/#coverage","text":"Get code coverage with Kover.","title":"Coverage"},{"location":"extensions/config/COVERAGE/#overview","text":"coverage isEnabled: Property<Boolean> // false enabled(value: Boolean = true) engine: Property<CoverageEngineVariant> // DefaultJacocoEngine kover(action: Action<KoverProjectExtension>)","title":"Overview"},{"location":"extensions/config/COVERAGE/#configuration","text":"It must be applied only in the root project. hubdle { config { coverage () } }","title":"Configuration"},{"location":"extensions/config/DOCUMENTATION/","text":"Documentation \u00b6 Get a complete documentation site built with MkDocs, Dokka, and more. Overview \u00b6 documentation isEnabled: Property<Boolean> // false enabled(value: Boolean = true) changelog readme site Changelog \u00b6 Manage the changelog easily Overview \u00b6 changelog isEnabled: Property<Boolean> // false enabled(value: Boolean = true) changelog(action: Action<ChangelogPluginExtension>) Configuration \u00b6 hubdle { config { documentation { changelog () } } } Patch the changelog \u00b6 ./gradlew patchChangelog Add an item to the changelog \u00b6 ./gradlew addChangelogItem --added \"some new addition\" ./gradlew addChangelogItem --changed \"some change\" ./gradlew addChangelogItem --removed \"something because it is no longer necessary\" Format the changelog \u00b6 ./gradlew applyFormatChangelog Merge the changelog \u00b6 Merge all non-final related versions into the final one ./gradlew mergeChangelog Readme \u00b6 Sync README with the current state of the project by running ./gradlew writeReadmeBadges Overview \u00b6 readme isEnabled: Property<Boolean> // false enabled(value: Boolean = true) badges isEnabled: Property<Boolean> // false enabled(value: Boolean = true) kotlin: Property<Boolean> // true mavenCentral: Property<Boolean> // true snapshots: Property<Boolean> // true build: Property<Boolean> // true coverage: Property<Boolean> // true quality: Property<Boolean> // true techDebt: Property<Boolean> // true Configuration \u00b6 Basic config \u00b6 hubdle { config { documentation { readme { badges () } } } } Advanced config \u00b6 hubdle { config { documentation { readme { badges { isEnabled = true kotlin = true mavenCentral = true snapshots = true build = true coverage = true quality = true techDebt = true } } } } } Site \u00b6 Build a site easily by running ./gradlew buildSite Overview \u00b6 site isEnabled: Property<Boolean> // false enabled(value: Boolean = true) reports isEnabled: Property<Boolean> // true enabled(value: Boolean = true) allTests: Property<Boolean> // true codeAnalysis: Property<Boolean> // true codeCoverage: Property<Boolean> // true codeQuality: Property<Boolean> // true mkdocs(action: Action<MkdocsExtension>) Configuration \u00b6 Basic config \u00b6 hubdle { config { documentation { site () } } } Advanced config \u00b6 hubdle { config { documentation { site { isEnabled = true reports { allTests = true codeAnalysis = true codeCoverage = true codeQuality = true } } } } }","title":"Documentation"},{"location":"extensions/config/DOCUMENTATION/#documentation","text":"Get a complete documentation site built with MkDocs, Dokka, and more.","title":"Documentation"},{"location":"extensions/config/DOCUMENTATION/#overview","text":"documentation isEnabled: Property<Boolean> // false enabled(value: Boolean = true) changelog readme site","title":"Overview"},{"location":"extensions/config/DOCUMENTATION/#changelog","text":"Manage the changelog easily","title":"Changelog"},{"location":"extensions/config/DOCUMENTATION/#overview_1","text":"changelog isEnabled: Property<Boolean> // false enabled(value: Boolean = true) changelog(action: Action<ChangelogPluginExtension>)","title":"Overview"},{"location":"extensions/config/DOCUMENTATION/#configuration","text":"hubdle { config { documentation { changelog () } } }","title":"Configuration"},{"location":"extensions/config/DOCUMENTATION/#patch-the-changelog","text":"./gradlew patchChangelog","title":"Patch the changelog"},{"location":"extensions/config/DOCUMENTATION/#add-an-item-to-the-changelog","text":"./gradlew addChangelogItem --added \"some new addition\" ./gradlew addChangelogItem --changed \"some change\" ./gradlew addChangelogItem --removed \"something because it is no longer necessary\"","title":"Add an item to the changelog"},{"location":"extensions/config/DOCUMENTATION/#format-the-changelog","text":"./gradlew applyFormatChangelog","title":"Format the changelog"},{"location":"extensions/config/DOCUMENTATION/#merge-the-changelog","text":"Merge all non-final related versions into the final one ./gradlew mergeChangelog","title":"Merge the changelog"},{"location":"extensions/config/DOCUMENTATION/#readme","text":"Sync README with the current state of the project by running ./gradlew writeReadmeBadges","title":"Readme"},{"location":"extensions/config/DOCUMENTATION/#overview_2","text":"readme isEnabled: Property<Boolean> // false enabled(value: Boolean = true) badges isEnabled: Property<Boolean> // false enabled(value: Boolean = true) kotlin: Property<Boolean> // true mavenCentral: Property<Boolean> // true snapshots: Property<Boolean> // true build: Property<Boolean> // true coverage: Property<Boolean> // true quality: Property<Boolean> // true techDebt: Property<Boolean> // true","title":"Overview"},{"location":"extensions/config/DOCUMENTATION/#configuration_1","text":"","title":"Configuration"},{"location":"extensions/config/DOCUMENTATION/#basic-config","text":"hubdle { config { documentation { readme { badges () } } } }","title":"Basic config"},{"location":"extensions/config/DOCUMENTATION/#advanced-config","text":"hubdle { config { documentation { readme { badges { isEnabled = true kotlin = true mavenCentral = true snapshots = true build = true coverage = true quality = true techDebt = true } } } } }","title":"Advanced config"},{"location":"extensions/config/DOCUMENTATION/#site","text":"Build a site easily by running ./gradlew buildSite","title":"Site"},{"location":"extensions/config/DOCUMENTATION/#overview_3","text":"site isEnabled: Property<Boolean> // false enabled(value: Boolean = true) reports isEnabled: Property<Boolean> // true enabled(value: Boolean = true) allTests: Property<Boolean> // true codeAnalysis: Property<Boolean> // true codeCoverage: Property<Boolean> // true codeQuality: Property<Boolean> // true mkdocs(action: Action<MkdocsExtension>)","title":"Overview"},{"location":"extensions/config/DOCUMENTATION/#configuration_2","text":"","title":"Configuration"},{"location":"extensions/config/DOCUMENTATION/#basic-config_1","text":"hubdle { config { documentation { site () } } }","title":"Basic config"},{"location":"extensions/config/DOCUMENTATION/#advanced-config_1","text":"hubdle { config { documentation { site { isEnabled = true reports { allTests = true codeAnalysis = true codeCoverage = true codeQuality = true } } } } }","title":"Advanced config"},{"location":"extensions/config/EXPLICIT_API/","text":"Explicit API \u00b6 Enable or disable explicit API. Configuration \u00b6 Basic config \u00b6 hubdle { config { explicitApi () } } Advanced config \u00b6 hubdle { config { explicitApi ( ExplicitApiMode . Strict ) } }","title":"Explicit API"},{"location":"extensions/config/EXPLICIT_API/#explicit-api","text":"Enable or disable explicit API.","title":"Explicit API"},{"location":"extensions/config/EXPLICIT_API/#configuration","text":"","title":"Configuration"},{"location":"extensions/config/EXPLICIT_API/#basic-config","text":"hubdle { config { explicitApi () } }","title":"Basic config"},{"location":"extensions/config/EXPLICIT_API/#advanced-config","text":"hubdle { config { explicitApi ( ExplicitApiMode . Strict ) } }","title":"Advanced config"},{"location":"extensions/config/FORMAT/","text":"Format \u00b6 Check or apply the code format via Spotless with Ktfmt. Overview \u00b6 format isEnabled: Property<Boolean> // true enabled(value: Boolean = true) includes: SetProperty<String> includes(vararg values: String) excludes: SetProperty<String> excludes(vararg values: String) ktfmtVersion: Property<String> spotless(action: Action<SpotlessExtension>) spotlessPredeclare(action: Action<SpotlessPredeclare>) Configuration \u00b6 Basic config \u00b6 hubdle { config { format () } } Advanced config \u00b6 hubdle { config { format { isEnabled . set ( true ) includes . set ( setOf ( \"*/kotlin/**/*.kt\" , \"src/*/kotlin/**/*.kt\" )) excludes . set ( setOf ( \"*/resources/**/*.kt\" , \"src/*/resources/**/*.kt\" , \"**/build/**\" , \"**/.gradle/**\" , ) ) ktfmtVersion . set ( \"0.39\" ) } } } Tasks \u00b6 ./gradlew checkFormat ./gradlew applyFormat","title":"Format"},{"location":"extensions/config/FORMAT/#format","text":"Check or apply the code format via Spotless with Ktfmt.","title":"Format"},{"location":"extensions/config/FORMAT/#overview","text":"format isEnabled: Property<Boolean> // true enabled(value: Boolean = true) includes: SetProperty<String> includes(vararg values: String) excludes: SetProperty<String> excludes(vararg values: String) ktfmtVersion: Property<String> spotless(action: Action<SpotlessExtension>) spotlessPredeclare(action: Action<SpotlessPredeclare>)","title":"Overview"},{"location":"extensions/config/FORMAT/#configuration","text":"","title":"Configuration"},{"location":"extensions/config/FORMAT/#basic-config","text":"hubdle { config { format () } }","title":"Basic config"},{"location":"extensions/config/FORMAT/#advanced-config","text":"hubdle { config { format { isEnabled . set ( true ) includes . set ( setOf ( \"*/kotlin/**/*.kt\" , \"src/*/kotlin/**/*.kt\" )) excludes . set ( setOf ( \"*/resources/**/*.kt\" , \"src/*/resources/**/*.kt\" , \"**/build/**\" , \"**/.gradle/**\" , ) ) ktfmtVersion . set ( \"0.39\" ) } } }","title":"Advanced config"},{"location":"extensions/config/FORMAT/#tasks","text":"./gradlew checkFormat ./gradlew applyFormat","title":"Tasks"},{"location":"extensions/config/INSTALL/","text":"Install \u00b6 Any pre-commit can be installed easily by running: Overview \u00b6 install isEnabled: Property<Boolean> // false enabled(value: Boolean = true) preCommits isEnabled: Property<Boolean> // false enabled(value: Boolean = true) allTests: Property<Boolean> // false applyFormat: Property<Boolean> // false assemble: Property<Boolean> // false checkAnalysis: Property<Boolean> // false checkApi: Property<Boolean> // false checkFormat: Property<Boolean> // false dumpApi: Property<Boolean> // false Configuration \u00b6 Basic config \u00b6 hubdle { config { install { preCommits () } } } Advanced config \u00b6 hubdle { config { install { preCommits { isEnabled . set ( true ) allTests . set ( true ) applyFormat . set ( true ) assemble . set ( true ) checkAnalysis . set ( true ) checkApi . set ( true ) checkFormat . set ( true ) dumpApi . set ( true ) } } } } Tasks \u00b6 ./gradlew installAllTestsPreCommit ./gradlew installApplyFormatPreCommit ./gradlew installAssemblePreCommit ./gradlew installCheckAnalysisPreCommit ./gradlew installCheckApiPreCommit ./gradlew installCheckFormatPreCommit ./gradlew installDumpApiPreCommit","title":"Install"},{"location":"extensions/config/INSTALL/#install","text":"Any pre-commit can be installed easily by running:","title":"Install"},{"location":"extensions/config/INSTALL/#overview","text":"install isEnabled: Property<Boolean> // false enabled(value: Boolean = true) preCommits isEnabled: Property<Boolean> // false enabled(value: Boolean = true) allTests: Property<Boolean> // false applyFormat: Property<Boolean> // false assemble: Property<Boolean> // false checkAnalysis: Property<Boolean> // false checkApi: Property<Boolean> // false checkFormat: Property<Boolean> // false dumpApi: Property<Boolean> // false","title":"Overview"},{"location":"extensions/config/INSTALL/#configuration","text":"","title":"Configuration"},{"location":"extensions/config/INSTALL/#basic-config","text":"hubdle { config { install { preCommits () } } }","title":"Basic config"},{"location":"extensions/config/INSTALL/#advanced-config","text":"hubdle { config { install { preCommits { isEnabled . set ( true ) allTests . set ( true ) applyFormat . set ( true ) assemble . set ( true ) checkAnalysis . set ( true ) checkApi . set ( true ) checkFormat . set ( true ) dumpApi . set ( true ) } } } }","title":"Advanced config"},{"location":"extensions/config/INSTALL/#tasks","text":"./gradlew installAllTestsPreCommit ./gradlew installApplyFormatPreCommit ./gradlew installAssemblePreCommit ./gradlew installCheckAnalysisPreCommit ./gradlew installCheckApiPreCommit ./gradlew installCheckFormatPreCommit ./gradlew installDumpApiPreCommit","title":"Tasks"},{"location":"extensions/config/LANGUAGE_SETTINGS/","text":"Explicit API \u00b6 Enable or disable language settings error or warnings. Overview \u00b6 languageSettings isEnabled: Property<Boolean> // false enabled(value: Boolean = true) experimentalContracts() experimentalCoroutinesApi() experimentalSerializationApi() experimentalStdlibApi() experimentalTime() flowPreview() ktorInternalAPI() requiresOptIn() optIn(annotationName: String) optIn(vararg annotationNames: String) languageSettings(action: Action<LanguageSettingsBuilder>) Configuration \u00b6 Basic config \u00b6 hubdle { config { languageSettings { experimentalStdlib () } } } Advanced config \u00b6 hubdle { config { languageSettings { experimentalCoroutinesApi () experimentalStdlibApi () experimentalTime () flowPreview () requiresOptIn () optIn ( \"org.example.SomeAnnotation\" ) } } }","title":"Explicit API"},{"location":"extensions/config/LANGUAGE_SETTINGS/#explicit-api","text":"Enable or disable language settings error or warnings.","title":"Explicit API"},{"location":"extensions/config/LANGUAGE_SETTINGS/#overview","text":"languageSettings isEnabled: Property<Boolean> // false enabled(value: Boolean = true) experimentalContracts() experimentalCoroutinesApi() experimentalSerializationApi() experimentalStdlibApi() experimentalTime() flowPreview() ktorInternalAPI() requiresOptIn() optIn(annotationName: String) optIn(vararg annotationNames: String) languageSettings(action: Action<LanguageSettingsBuilder>)","title":"Overview"},{"location":"extensions/config/LANGUAGE_SETTINGS/#configuration","text":"","title":"Configuration"},{"location":"extensions/config/LANGUAGE_SETTINGS/#basic-config","text":"hubdle { config { languageSettings { experimentalStdlib () } } }","title":"Basic config"},{"location":"extensions/config/LANGUAGE_SETTINGS/#advanced-config","text":"hubdle { config { languageSettings { experimentalCoroutinesApi () experimentalStdlibApi () experimentalTime () flowPreview () requiresOptIn () optIn ( \"org.example.SomeAnnotation\" ) } } }","title":"Advanced config"},{"location":"extensions/config/NEXUS/","text":"Nexus \u00b6 Easy setup to publish to MavenCentral, Snapshot or any Nexus repository Overview \u00b6 nexus isEnabled: Property<Boolean> // false enabled(value: Boolean = true) nexusPublishing(action: Action<NexusPublishException>) Configuration \u00b6 hubdle { config { nexus () } } Local properties, environment variables or Gradle properties nexus.token = ... nexus.snapshotRepositoryUrl = ... nexus.stagingProfileId = ... nexus.url = ... nexus.user = ... Any property can be provided in screaming case too: NEXUS_TOKEN = ... NEXUS_SNAPSHOT_REPOSITORY_URL = ... NEXUS_STAGING_PROFILE_ID = ... NEXUS_URL = ... NEXUS_USER = ...","title":"Nexus"},{"location":"extensions/config/NEXUS/#nexus","text":"Easy setup to publish to MavenCentral, Snapshot or any Nexus repository","title":"Nexus"},{"location":"extensions/config/NEXUS/#overview","text":"nexus isEnabled: Property<Boolean> // false enabled(value: Boolean = true) nexusPublishing(action: Action<NexusPublishException>)","title":"Overview"},{"location":"extensions/config/NEXUS/#configuration","text":"hubdle { config { nexus () } } Local properties, environment variables or Gradle properties nexus.token = ... nexus.snapshotRepositoryUrl = ... nexus.stagingProfileId = ... nexus.url = ... nexus.user = ... Any property can be provided in screaming case too: NEXUS_TOKEN = ... NEXUS_SNAPSHOT_REPOSITORY_URL = ... NEXUS_STAGING_PROFILE_ID = ... NEXUS_URL = ... NEXUS_USER = ...","title":"Configuration"},{"location":"extensions/config/PUBLISHING/","text":"Publishing \u00b6 Configure the project to be automatically published. Overview \u00b6 publishing isEnabled: Property<Boolean> // false enabled(value: Boolean = true) repositories(action: Action<RepositoryHandler>) publishing(action: Action<GradlePublishingExtension>) signing(action: Action<SigningExtension>) Configuration \u00b6 Basic config \u00b6 hubdle { config { publishing () } } Local properties, environment variables or Gradle properties # POM ### pom.name = Hubdle pom.description = Hubdle description pom.url = https://github.com/JavierSegoviaCordoba/hubdle pom.license.name = The Apache License, Version 2.0 pom.license.url = https://www.apache.org/licenses/LICENSE-2.0.txt pom.developer.id = JavierSegoviaCordoba pom.developer.name = Javier Segovia Cordoba pom.developer.email = javier@segoviacordoba.com pom.scm.url = https://github.com/JavierSegoviaCordoba/hubdle pom.scm.connection = scm:git:git@github.com:JavierSegoviaCordoba/hubdle.git pom.scm.developerConnection = scm:git:git@github.com:JavierSegoviaCordoba/hubdle.git # Signing signing.gnupg.key = ... signing.gnupg.keyName = ... signing.gnupg.passphrase = ... signing.keyId = ... # Gradle Publish plugin gradle.publish.key = ... gradle.publish.secret = ... # Others publishing.nonSemver = false publishing.sign = true Any property can be provided in screaming case too (except Gradle Publish plugin properties): # POM ### POM_NAME = Hubdle POM_DESCRIPTION = Hubdle description POM_URL = https://github.com/JavierSegoviaCordoba/hubdle POM_LICENSE_NAME = The Apache License, Version 2.0 POM_LICENSE_URL = https://www.apache.org/licenses/LICENSE-2.0.txt POM_DEVELOPER_ID = JavierSegoviaCordoba POM_DEVELOPER_NAME = Javier Segovia Cordoba POM_DEVELOPER_EMAIL = javier@segoviacordoba.com POM_SCM_URL = https://github.com/JavierSegoviaCordoba/hubdle POM_SCM_CONNECTION = scm:git:git@github.com:JavierSegoviaCordoba/hubdle.git POM_SCM_DEVELOPER_CONNECTION = scm:git:git@github.com:JavierSegoviaCordoba/hubdle.git # Signing SIGNING_GNUPG_KEY = ... SIGNING_GNUPG_KEY_NAME = ... SIGNING_GNUPG_PASSPHRASE = ... SIGNING_KEY_ID = ... # Others PUBLISHING_NON_SEMVER = false PUBLISHING_SIGN = true","title":"Publishing"},{"location":"extensions/config/PUBLISHING/#publishing","text":"Configure the project to be automatically published.","title":"Publishing"},{"location":"extensions/config/PUBLISHING/#overview","text":"publishing isEnabled: Property<Boolean> // false enabled(value: Boolean = true) repositories(action: Action<RepositoryHandler>) publishing(action: Action<GradlePublishingExtension>) signing(action: Action<SigningExtension>)","title":"Overview"},{"location":"extensions/config/PUBLISHING/#configuration","text":"","title":"Configuration"},{"location":"extensions/config/PUBLISHING/#basic-config","text":"hubdle { config { publishing () } } Local properties, environment variables or Gradle properties # POM ### pom.name = Hubdle pom.description = Hubdle description pom.url = https://github.com/JavierSegoviaCordoba/hubdle pom.license.name = The Apache License, Version 2.0 pom.license.url = https://www.apache.org/licenses/LICENSE-2.0.txt pom.developer.id = JavierSegoviaCordoba pom.developer.name = Javier Segovia Cordoba pom.developer.email = javier@segoviacordoba.com pom.scm.url = https://github.com/JavierSegoviaCordoba/hubdle pom.scm.connection = scm:git:git@github.com:JavierSegoviaCordoba/hubdle.git pom.scm.developerConnection = scm:git:git@github.com:JavierSegoviaCordoba/hubdle.git # Signing signing.gnupg.key = ... signing.gnupg.keyName = ... signing.gnupg.passphrase = ... signing.keyId = ... # Gradle Publish plugin gradle.publish.key = ... gradle.publish.secret = ... # Others publishing.nonSemver = false publishing.sign = true Any property can be provided in screaming case too (except Gradle Publish plugin properties): # POM ### POM_NAME = Hubdle POM_DESCRIPTION = Hubdle description POM_URL = https://github.com/JavierSegoviaCordoba/hubdle POM_LICENSE_NAME = The Apache License, Version 2.0 POM_LICENSE_URL = https://www.apache.org/licenses/LICENSE-2.0.txt POM_DEVELOPER_ID = JavierSegoviaCordoba POM_DEVELOPER_NAME = Javier Segovia Cordoba POM_DEVELOPER_EMAIL = javier@segoviacordoba.com POM_SCM_URL = https://github.com/JavierSegoviaCordoba/hubdle POM_SCM_CONNECTION = scm:git:git@github.com:JavierSegoviaCordoba/hubdle.git POM_SCM_DEVELOPER_CONNECTION = scm:git:git@github.com:JavierSegoviaCordoba/hubdle.git # Signing SIGNING_GNUPG_KEY = ... SIGNING_GNUPG_KEY_NAME = ... SIGNING_GNUPG_PASSPHRASE = ... SIGNING_KEY_ID = ... # Others PUBLISHING_NON_SEMVER = false PUBLISHING_SIGN = true","title":"Basic config"},{"location":"extensions/config/VERSIONING/","text":"Versioning \u00b6 Enable semantic versioning for the current project. More info here Overview \u00b6 versioning isEnabled: Property<Boolean> // true enabled(value: Boolean = true) tagPrefix: Property<String> // \"\" (empty string) semver(action: Action<SemverExtension>) Configuration \u00b6 Basic config \u00b6 hubdle { config { versioning () } } Advanced config \u00b6 hubdle { config { versioning { isEnabled . set ( true ) tagPrefix . set ( \"v\" ) } } }","title":"Versioning"},{"location":"extensions/config/VERSIONING/#versioning","text":"Enable semantic versioning for the current project. More info here","title":"Versioning"},{"location":"extensions/config/VERSIONING/#overview","text":"versioning isEnabled: Property<Boolean> // true enabled(value: Boolean = true) tagPrefix: Property<String> // \"\" (empty string) semver(action: Action<SemverExtension>)","title":"Overview"},{"location":"extensions/config/VERSIONING/#configuration","text":"","title":"Configuration"},{"location":"extensions/config/VERSIONING/#basic-config","text":"hubdle { config { versioning () } }","title":"Basic config"},{"location":"extensions/config/VERSIONING/#advanced-config","text":"hubdle { config { versioning { isEnabled . set ( true ) tagPrefix . set ( \"v\" ) } } }","title":"Advanced config"},{"location":"extensions/kotlin/ANDROID/","text":"Android \u00b6 Overview \u00b6 android isEnabled: Property<Boolean> // false enabled(value: Boolean = true) namespace: Property<String?> // null minSdk: Property<Int> // 23 compileSdk: Property<Int> // 33 targetSdk: Property<Int> // 33 application isEnabled: Property<Boolean> // false enabled(value: Boolean = true) features compose coroutines extendedStdlib kotest serialization toolchain applicationId: Property<String?> // namespace versionCode: Property<Int> // 1 versionName: Property<String> // 0.1.0 configuration(name: String, action: Action<Configuration>) sourceSet(name: String, action: Action<KotlinSourceSet>) main(action: Action<KotlinSourceSet>) test(action: Action<KotlinSourceSet>) android(action: Action<ApplicationExtension>) library isEnabled: Property<Boolean> // false enabled(value: Boolean = true) features compose coroutines extendedStdlib kotest serialization toolchain configuration(name: String, action: Action<Configuration>) sourceSet(name: String, action: Action<KotlinSourceSet>) main(action: Action<KotlinSourceSet>) test(action: Action<KotlinSourceSet>) android(action: Action<LibraryExtension>) library \u00b6 Configuration \u00b6 Basic config \u00b6 hubdle { kotlin { android { library () } } } Advanced config \u00b6 hubdle { kotlin { android { library { isEnabled . set ( true ) features { coroutines () extendedStdlib () } compileSdk . set ( 31 ) minSdk . set ( 21 ) main { dependencies { implementation ( libs . some . lib ) } } test { dependencies { implementation ( libs . some . test . lib ) } } } } } }","title":"Android"},{"location":"extensions/kotlin/ANDROID/#android","text":"","title":"Android"},{"location":"extensions/kotlin/ANDROID/#overview","text":"android isEnabled: Property<Boolean> // false enabled(value: Boolean = true) namespace: Property<String?> // null minSdk: Property<Int> // 23 compileSdk: Property<Int> // 33 targetSdk: Property<Int> // 33 application isEnabled: Property<Boolean> // false enabled(value: Boolean = true) features compose coroutines extendedStdlib kotest serialization toolchain applicationId: Property<String?> // namespace versionCode: Property<Int> // 1 versionName: Property<String> // 0.1.0 configuration(name: String, action: Action<Configuration>) sourceSet(name: String, action: Action<KotlinSourceSet>) main(action: Action<KotlinSourceSet>) test(action: Action<KotlinSourceSet>) android(action: Action<ApplicationExtension>) library isEnabled: Property<Boolean> // false enabled(value: Boolean = true) features compose coroutines extendedStdlib kotest serialization toolchain configuration(name: String, action: Action<Configuration>) sourceSet(name: String, action: Action<KotlinSourceSet>) main(action: Action<KotlinSourceSet>) test(action: Action<KotlinSourceSet>) android(action: Action<LibraryExtension>)","title":"Overview"},{"location":"extensions/kotlin/ANDROID/#library","text":"","title":"library"},{"location":"extensions/kotlin/ANDROID/#configuration","text":"","title":"Configuration"},{"location":"extensions/kotlin/ANDROID/#basic-config","text":"hubdle { kotlin { android { library () } } }","title":"Basic config"},{"location":"extensions/kotlin/ANDROID/#advanced-config","text":"hubdle { kotlin { android { library { isEnabled . set ( true ) features { coroutines () extendedStdlib () } compileSdk . set ( 31 ) minSdk . set ( 21 ) main { dependencies { implementation ( libs . some . lib ) } } test { dependencies { implementation ( libs . some . test . lib ) } } } } } }","title":"Advanced config"},{"location":"extensions/kotlin/JVM/","text":"Kotlin JVM \u00b6 Overview \u00b6 jvm isEnabled: Property<Boolean> // false enabled(value: Boolean = true) features application compose coroutines extendedStdlib gradle intellij kotest serialization toolchain main(action: Action<KotlinSourceSet>) test(action: Action<KotlinSourceSet>) kotlin(action: Action<KotlinJvmProjectExtension>) Configuration \u00b6 Basic config \u00b6 hubdle { kotlin { jvm () } } Advanced config \u00b6 hubdle { kotlin { jvm { isEnabled . set ( true ) features { coroutines () extendedGradle () extendedStdlib () jvmToolchain { javaVersion ( JavaVersion . VERSION_1_8 ) } } main { dependencies { implementation ( libs . some . lib ) } } test { dependencies { implementation ( libs . some . test . lib ) } } } } }","title":"Kotlin JVM"},{"location":"extensions/kotlin/JVM/#kotlin-jvm","text":"","title":"Kotlin JVM"},{"location":"extensions/kotlin/JVM/#overview","text":"jvm isEnabled: Property<Boolean> // false enabled(value: Boolean = true) features application compose coroutines extendedStdlib gradle intellij kotest serialization toolchain main(action: Action<KotlinSourceSet>) test(action: Action<KotlinSourceSet>) kotlin(action: Action<KotlinJvmProjectExtension>)","title":"Overview"},{"location":"extensions/kotlin/JVM/#configuration","text":"","title":"Configuration"},{"location":"extensions/kotlin/JVM/#basic-config","text":"hubdle { kotlin { jvm () } }","title":"Basic config"},{"location":"extensions/kotlin/JVM/#advanced-config","text":"hubdle { kotlin { jvm { isEnabled . set ( true ) features { coroutines () extendedGradle () extendedStdlib () jvmToolchain { javaVersion ( JavaVersion . VERSION_1_8 ) } } main { dependencies { implementation ( libs . some . lib ) } } test { dependencies { implementation ( libs . some . test . lib ) } } } } }","title":"Advanced config"},{"location":"extensions/kotlin/MULTIPLATFORM/","text":"Kotlin Multiplatform \u00b6 Overview \u00b6 multiplatform isEnabled: Property<Boolean> // false enabled(value: Boolean = true) features multiplatformMinimumTargetPerOs compose coroutines extendedStdlib kotest serialization toolchain common android apple ios iosArm32 iosArm64 iosSimulatorArm64 iosX64 macos macosArm64 macosX64 tvos tvosArm64 tvosSimulatorArm64 tvosX64 watchos watchosArm32 watchosArm64 watchosSimulatorArm64 watchosX64 watchosX86 jvm jvmAndAndroid js browser nodejs linux mingw native wasm kotlin(action: Action<KotlinMultiplatformExtension>) Configuration \u00b6 Basic config \u00b6 hubdle { kotlin { multiplatform { jvm () } } } Advanced config \u00b6 hubdle { kotlin { multiplatform { isEnabled . set ( true ) features { coroutines () extendedStdlib () jvmToolChain { javaVersion ( JavaVersion . VERSION_1_8 ) } } android { main { dependencies { implementation ( libs . some . android . lib ) } } test { dependencies { implementation ( libs . some . jvm . android . lib ) } } } common { main { dependencies { implementation ( libs . some . lib ) } } test { dependencies { implementation ( libs . some . test . lib ) } } } jvm { main { dependencies { implementation ( libs . some . jvm . lib ) } } test { dependencies { implementation ( libs . some . jvm . test . lib ) } } } } } }","title":"Kotlin Multiplatform"},{"location":"extensions/kotlin/MULTIPLATFORM/#kotlin-multiplatform","text":"","title":"Kotlin Multiplatform"},{"location":"extensions/kotlin/MULTIPLATFORM/#overview","text":"multiplatform isEnabled: Property<Boolean> // false enabled(value: Boolean = true) features multiplatformMinimumTargetPerOs compose coroutines extendedStdlib kotest serialization toolchain common android apple ios iosArm32 iosArm64 iosSimulatorArm64 iosX64 macos macosArm64 macosX64 tvos tvosArm64 tvosSimulatorArm64 tvosX64 watchos watchosArm32 watchosArm64 watchosSimulatorArm64 watchosX64 watchosX86 jvm jvmAndAndroid js browser nodejs linux mingw native wasm kotlin(action: Action<KotlinMultiplatformExtension>)","title":"Overview"},{"location":"extensions/kotlin/MULTIPLATFORM/#configuration","text":"","title":"Configuration"},{"location":"extensions/kotlin/MULTIPLATFORM/#basic-config","text":"hubdle { kotlin { multiplatform { jvm () } } }","title":"Basic config"},{"location":"extensions/kotlin/MULTIPLATFORM/#advanced-config","text":"hubdle { kotlin { multiplatform { isEnabled . set ( true ) features { coroutines () extendedStdlib () jvmToolChain { javaVersion ( JavaVersion . VERSION_1_8 ) } } android { main { dependencies { implementation ( libs . some . android . lib ) } } test { dependencies { implementation ( libs . some . jvm . android . lib ) } } } common { main { dependencies { implementation ( libs . some . lib ) } } test { dependencies { implementation ( libs . some . test . lib ) } } } jvm { main { dependencies { implementation ( libs . some . jvm . lib ) } } test { dependencies { implementation ( libs . some . jvm . test . lib ) } } } } } }","title":"Advanced config"},{"location":"projects/hubdle-gradle-plugin/hubdle-gradle-plugin/","text":"Module hubdle-gradle-plugin \u00b6 Hubdle \u00b6 Usage \u00b6 Apply the plugin in your build.gradle.kts or in your settings.gradle.kts : plugins { id ( \"com.javiersc.hubdle\" ) version \" $ version \" } Plugins applied \u00b6 hubdle-project-gradle-plugin hubdle-settings-gradle-plugin Configurations \u00b6 Visit the website","title":"hubdle-gradle-plugin"},{"location":"projects/hubdle-gradle-plugin/hubdle-gradle-plugin/#module-hubdle-gradle-plugin","text":"","title":"Module hubdle-gradle-plugin"},{"location":"projects/hubdle-gradle-plugin/hubdle-gradle-plugin/#hubdle","text":"","title":"Hubdle"},{"location":"projects/hubdle-gradle-plugin/hubdle-gradle-plugin/#usage","text":"Apply the plugin in your build.gradle.kts or in your settings.gradle.kts : plugins { id ( \"com.javiersc.hubdle\" ) version \" $ version \" }","title":"Usage"},{"location":"projects/hubdle-gradle-plugin/hubdle-gradle-plugin/#plugins-applied","text":"hubdle-project-gradle-plugin hubdle-settings-gradle-plugin","title":"Plugins applied"},{"location":"projects/hubdle-gradle-plugin/hubdle-gradle-plugin/#configurations","text":"Visit the website","title":"Configurations"},{"location":"projects/hubdle-project-gradle-plugin/hubdle-project-gradle-plugin/","text":"Module hubdle-gradle-plugin \u00b6 Hubdle \u00b6 Usage \u00b6 plugins { id ( \"com.javiersc.hubdle\" ) version \" $ version \" } // basic config to get a Kotlin jvm project with coroutines and a custom dependency hubdle { kotlin { jvm { features { coroutines () } main { dependencies { implementation ( \"org.example-group:example:1.0.0\" ) } } } } } Configurations \u00b6 Visit the website","title":"hubdle-project-gradle-plugin"},{"location":"projects/hubdle-project-gradle-plugin/hubdle-project-gradle-plugin/#module-hubdle-gradle-plugin","text":"","title":"Module hubdle-gradle-plugin"},{"location":"projects/hubdle-project-gradle-plugin/hubdle-project-gradle-plugin/#hubdle","text":"","title":"Hubdle"},{"location":"projects/hubdle-project-gradle-plugin/hubdle-project-gradle-plugin/#usage","text":"plugins { id ( \"com.javiersc.hubdle\" ) version \" $ version \" } // basic config to get a Kotlin jvm project with coroutines and a custom dependency hubdle { kotlin { jvm { features { coroutines () } main { dependencies { implementation ( \"org.example-group:example:1.0.0\" ) } } } } }","title":"Usage"},{"location":"projects/hubdle-project-gradle-plugin/hubdle-project-gradle-plugin/#configurations","text":"Visit the website","title":"Configurations"},{"location":"projects/hubdle-settings-gradle-plugin/hubdle-settings-gradle-plugin/","text":"Module hubdle-settings-gradle-plugin \u00b6 Hubdle settings plugin \u00b6 Usage \u00b6 plugins { id ( \"com.javiersc.hubdle.settings\" ) version \" $ version \" } hubdle { autoInclude { excludes ( \":some-project\" ) excludedBuilds ( \"some-dir/some-build\" ) } }","title":"hubdle-settings-gradle-plugin"},{"location":"projects/hubdle-settings-gradle-plugin/hubdle-settings-gradle-plugin/#module-hubdle-settings-gradle-plugin","text":"","title":"Module hubdle-settings-gradle-plugin"},{"location":"projects/hubdle-settings-gradle-plugin/hubdle-settings-gradle-plugin/#hubdle-settings-plugin","text":"","title":"Hubdle settings plugin"},{"location":"projects/hubdle-settings-gradle-plugin/hubdle-settings-gradle-plugin/#usage","text":"plugins { id ( \"com.javiersc.hubdle.settings\" ) version \" $ version \" } hubdle { autoInclude { excludes ( \":some-project\" ) excludedBuilds ( \"some-dir/some-build\" ) } }","title":"Usage"}]}