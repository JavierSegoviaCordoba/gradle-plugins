{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "tags": [
    "kotlin"
  ],
  "severity": "Info",
  "comment": "Property 'value' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "method",
      "path": "plugins/documentation/changelog/main/kotlin/com/javiersc/gradle/plugins/changelog/internal/Changelog.kt",
      "language": "kotlin",
      "line": 50,
      "offset": 36,
      "length": 5,
      "code": {
        "startLine": 48,
        "length": 5,
        "offset": 51,
        "surroundingCode": "            }\n\n            internal class Item(val value: String) {\n\n                override fun toString(): String = value"
      }
    }
  ],
  "attributes": {
    "module": "gradle-plugins.plugins.documentation.changelog.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "6653702043426251215"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Remove unnecessary parentheses from function call with lambda",
  "tags": [
    "kotlin"
  ],
  "severity": "Info",
  "comment": "Remove unnecessary parentheses from function call with lambda",
  "detailsInfo": "Reports redundant empty parentheses of function calls where the only parameter is a lambda that's outside the parentheses.\n\nUse the 'Remove unnecessary parentheses from function call with lambda' quick-fix to clean up the code.\n\n**Examples:**\n\n\n      fun foo() {\n          listOf(1).forEach() {  }\n      }\n\nAfter the quick-fix is applied:\n\n\n      fun foo() {\n          listOf(1).forEach {  }\n      }\n",
  "sources": [
    {
      "type": "method",
      "path": "plugins/code-enhancers-and-utils/kotlin-config/main/kotlin/com/javiersc/gradle/plugins/kotlin/config/KotlinConfigType.kt",
      "language": "kotlin",
      "line": 66,
      "offset": 49,
      "length": 2,
      "code": {
        "startLine": 64,
        "length": 2,
        "offset": 105,
        "surroundingCode": "            project.configureJavaAndKotlinSourceSets()\n\n            project.tasks.withType<KotlinCompile>() {\n                kotlinOptions { jvmTarget = JavaVersion.VERSION_11.toString() }\n                sourceCompatibility = JavaVersion.VERSION_11.toString()"
      }
    }
  ],
  "attributes": {
    "module": "gradle-plugins.plugins.code-enhancers-and-utils.kotlin-config.main",
    "inspectionName": "RemoveEmptyParenthesesFromLambdaCall"
  },
  "hash": "3845329988822773624"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused receiver parameter",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Receiver parameter is never used",
  "detailsInfo": "Reports receiver parameter of extension functions and properties that is not used.\n\n**Remove redundant receiver parameter** can be used to amend the code automatically.",
  "sources": [
    {
      "type": "method",
      "path": "plugins/publish/publish/main/kotlin/com/javiersc/gradle/plugins/publish/internal/SigningExtensions.kt",
      "language": "kotlin",
      "line": 47,
      "offset": 13,
      "length": 16,
      "code": {
        "startLine": 45,
        "length": 16,
        "offset": 102,
        "surroundingCode": "    get() = project.properties[\"signing.gnupg.keyId\"]?.toString().isNullOrBlank().not()\n\ninternal val SigningExtension.hasSigningKeyIdEnvironmentVariable: Boolean\n    get() = System.getenv(\"SIGNING_KEY_ID\").isNullOrBlank().not()\n"
      }
    }
  ],
  "attributes": {
    "module": "gradle-plugins.plugins.publish.publish.main",
    "inspectionName": "UnusedReceiverParameter"
  },
  "hash": "3637938371287820499"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused receiver parameter",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Receiver parameter is never used",
  "detailsInfo": "Reports receiver parameter of extension functions and properties that is not used.\n\n**Remove redundant receiver parameter** can be used to amend the code automatically.",
  "sources": [
    {
      "type": "method",
      "path": "plugins/publish/publish/main/kotlin/com/javiersc/gradle/plugins/publish/internal/SigningExtensions.kt",
      "language": "kotlin",
      "line": 56,
      "offset": 13,
      "length": 16,
      "code": {
        "startLine": 54,
        "length": 16,
        "offset": 107,
        "surroundingCode": "    get() = project.properties[\"signing.gnupg.passphrase\"]?.toString().isNullOrBlank().not()\n\ninternal val SigningExtension.hasSigningKeyPassphraseEnvironmentVariable: Boolean\n    get() = System.getenv(\"SIGNING_KEY_PASSPHRASE\").isNullOrBlank().not()\n"
      }
    }
  ],
  "attributes": {
    "module": "gradle-plugins.plugins.publish.publish.main",
    "inspectionName": "UnusedReceiverParameter"
  },
  "hash": "-8118152144995351515"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused receiver parameter",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Receiver parameter is never used",
  "detailsInfo": "Reports receiver parameter of extension functions and properties that is not used.\n\n**Remove redundant receiver parameter** can be used to amend the code automatically.",
  "sources": [
    {
      "type": "method",
      "path": "plugins/publish/publish/main/kotlin/com/javiersc/gradle/plugins/publish/internal/SigningExtensions.kt",
      "language": "kotlin",
      "line": 38,
      "offset": 13,
      "length": 16,
      "code": {
        "startLine": 36,
        "length": 16,
        "offset": 104,
        "surroundingCode": "    get() = project.properties[\"signing.gnupg.keyName\"]?.toString().isNullOrBlank().not()\n\ninternal val SigningExtension.hasSigningKeyNameEnvironmentVariable: Boolean\n    get() = System.getenv(\"SIGNING_KEY_NAME\").isNullOrBlank().not()\n"
      }
    }
  ],
  "attributes": {
    "module": "gradle-plugins.plugins.publish.publish.main",
    "inspectionName": "UnusedReceiverParameter"
  },
  "hash": "7796472001316338549"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused receiver parameter",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Receiver parameter is never used",
  "detailsInfo": "Reports receiver parameter of extension functions and properties that is not used.\n\n**Remove redundant receiver parameter** can be used to amend the code automatically.",
  "sources": [
    {
      "type": "method",
      "path": "plugins/publish/publish/main/kotlin/com/javiersc/gradle/plugins/publish/internal/SigningExtensions.kt",
      "language": "kotlin",
      "line": 65,
      "offset": 13,
      "length": 16,
      "code": {
        "startLine": 63,
        "length": 16,
        "offset": 100,
        "surroundingCode": "    get() = project.properties[\"signing.gnupg.key\"]?.toString().isNullOrBlank().not()\n\ninternal val SigningExtension.hasSigningKeyEnvironmentVariable: Boolean\n    get() = System.getenv(\"SIGNING_KEY\").isNullOrBlank().not()"
      }
    }
  ],
  "attributes": {
    "module": "gradle-plugins.plugins.publish.publish.main",
    "inspectionName": "UnusedReceiverParameter"
  },
  "hash": "6614827840692727980"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"outputDotDocsDirectory\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "method",
      "path": "plugins/documentation/docs/main/kotlin/com/javiersc/gradle/plugins/docs/tasks/PreBuildDocsTask.kt",
      "language": "kotlin",
      "line": 56,
      "offset": 8,
      "length": 22,
      "code": {
        "startLine": 54,
        "length": 22,
        "offset": 34,
        "surroundingCode": "\n    @get:OutputDirectory\n    val outputDotDocsDirectory: File\n        get() = dotDocsDirectory\n"
      }
    }
  ],
  "attributes": {
    "module": "gradle-plugins.plugins.documentation.docs.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "4411674526245749932"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"javiersc-dependency-updates\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "method",
      "path": "all-plugins/main/kotlin/DependencyUpdatesAccessors.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 27,
      "length": 29,
      "code": {
        "startLine": 7,
        "length": 29,
        "offset": 71,
        "surroundingCode": "    get() = javiersc(\"dependency.updates\")\n\nfun PluginDependenciesSpec.`javiersc-dependency-updates`(\n    version: String,\n): PluginDependencySpec = javiersc(\"dependency.updates\", version)"
      }
    }
  ],
  "attributes": {
    "module": "gradle-plugins.all-plugins.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "-5323804202195859099"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"javiersc-dependency-updates\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "method",
      "path": "all-plugins/main/kotlin/DependencyUpdatesAccessors.kt",
      "language": "kotlin",
      "line": 6,
      "offset": 27,
      "length": 29,
      "code": {
        "startLine": 4,
        "length": 29,
        "offset": 78,
        "surroundingCode": "import org.gradle.plugin.use.PluginDependencySpec\n\nval PluginDependenciesSpec.`javiersc-dependency-updates`: PluginDependencySpec\n    get() = javiersc(\"dependency.updates\")\n"
      }
    }
  ],
  "attributes": {
    "module": "gradle-plugins.all-plugins.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "4333864265746367779"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"javiersc-code-formatter\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "method",
      "path": "all-plugins/main/kotlin/CodeFormatterAccessors.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 27,
      "length": 25,
      "code": {
        "startLine": 7,
        "length": 25,
        "offset": 67,
        "surroundingCode": "    get() = javiersc(\"code.formatter\")\n\nfun PluginDependenciesSpec.`javiersc-code-formatter`(\n    version: String,\n): PluginDependencySpec = javiersc(\"code.formatter\", version)"
      }
    }
  ],
  "attributes": {
    "module": "gradle-plugins.all-plugins.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "-5933615803741469895"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"javiersc-code-formatter\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "method",
      "path": "all-plugins/main/kotlin/CodeFormatterAccessors.kt",
      "language": "kotlin",
      "line": 6,
      "offset": 27,
      "length": 25,
      "code": {
        "startLine": 4,
        "length": 25,
        "offset": 78,
        "surroundingCode": "import org.gradle.plugin.use.PluginDependencySpec\n\nval PluginDependenciesSpec.`javiersc-code-formatter`: PluginDependencySpec\n    get() = javiersc(\"code.formatter\")\n"
      }
    }
  ],
  "attributes": {
    "module": "gradle-plugins.all-plugins.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "4836365281438810327"
}]}