{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Nested lambda has shadowed implicit parameter",
  "severity": "Moderate",
  "comment": "Implicit parameter 'it' of enclosing lambda is shadowed",
  "detailsInfo": "Reports nested lambdas with shadowed implicit parameters.\n\n**Example:**\n\n\n    fun foo(listOfLists: List<List<String>>) {\n      listOfLists.forEach {\n        it.forEach {\n          println(it)\n        }\n      }\n    }\n\nAfter the quick-fix is applied:\n\n\n    fun foo(listOfLists: List<List<String>>) {\n      listOfLists.forEach {\n        it.forEach { it1 ->\n          println(it1)\n        }\n      }\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/kotlin/android/_internal/calculateAndroidNamespace.kt",
      "language": "kotlin",
      "line": 43,
      "offset": 56,
      "length": 2,
      "code": {
        "startLine": 41,
        "length": 2,
        "offset": 121,
        "surroundingCode": "        }\n        ?.flatMap { it.listFiles().orEmpty().toList() }\n        ?.firstOrNull { it.listFiles().orEmpty().any { it.extension == \"kt\" } }\n        ?.listFiles()\n        ?.firstOrNull { it.extension == \"kt\" }"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "NestedLambdaShadowedImplicitParameter"
  },
  "hash": "dd5f68d99c4a4e1ec2ca802871c1c78ca91f49e4d84eba4860463e3c4bb1a1a8"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'includes' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/config/analysis/HubdleConfigAnalysisExtension.kt",
      "language": "kotlin",
      "line": 50,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 48,
        "length": 6,
        "offset": 74,
        "surroundingCode": "    public val ignoreFailures: Property<Boolean> = property { true }\n\n    public val includes: SetProperty<String> = setProperty { setOf(\"**/*.kt\", \"**/*.kts\") }\n\n    @HubdleDslMarker"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "77ba41a73e22e060d0359d3c73540f54d48208ff5c589982a6c192e37582703a"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'ignoreFailures' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/config/analysis/HubdleConfigAnalysisExtension.kt",
      "language": "kotlin",
      "line": 48,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 46,
        "length": 6,
        "offset": 55,
        "surroundingCode": "    override val priority: Priority = Priority.P3\n\n    public val ignoreFailures: Property<Boolean> = property { true }\n\n    public val includes: SetProperty<String> = setProperty { setOf(\"**/*.kt\", \"**/*.kts\") }"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "a82c140e834e101765933b5ca70b031546cbcff125fc79044a162a3ff0084730"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'json' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/kotlin/features/shared/HubdleKotlinSerializationFeatureExtension.kt",
      "language": "kotlin",
      "line": 35,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 33,
        "length": 6,
        "offset": 55,
        "surroundingCode": "    override val priority: Priority = Priority.P4\n\n    public val json: Property<Boolean> = property { true }\n\n    override fun Project.defaultConfiguration() {"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "b3bbec436d8ff4694bcd1401e27dfbfdefc5726e4a0cfa74495bae1a9617095e"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'linuxArm32Hfp' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/kotlin/multiplatform/targets/HubdleKotlinMultiplatformLinuxExtension.kt",
      "language": "kotlin",
      "line": 51,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 49,
        "length": 6,
        "offset": 54,
        "surroundingCode": "        get() = setOf(hubdleKotlinMultiplatform)\n\n    public val linuxArm32Hfp: KotlinMultiplatformLinuxArm32HfpExtension\n        get() = getHubdleExtension()\n"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "06291fac7947738d9a686ba73978ece7e1050924d634f7a1e56a7bd42a1d75fa"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'allEnabled' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/kotlin/multiplatform/targets/HubdleKotlinMultiplatformLinuxExtension.kt",
      "language": "kotlin",
      "line": 41,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 39,
        "length": 6,
        "offset": 51,
        "surroundingCode": "    override val targetName: String = \"linux\"\n\n    public val allEnabled: Property<Boolean> = property { false }\n\n    @HubdleDslMarker"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "72f55001064491be5686a3f9ce6bf04a2dfc25892045706a62eb31e921565261"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'linuxArm64' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/kotlin/multiplatform/targets/HubdleKotlinMultiplatformLinuxExtension.kt",
      "language": "kotlin",
      "line": 61,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 59,
        "length": 6,
        "offset": 11,
        "surroundingCode": "    }\n\n    public val linuxArm64: KotlinMultiplatformLinuxArm64Extension\n        get() = getHubdleExtension()\n"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "0dd51949f18eff750c60544f036b27ac8833a42b0adade572276decc3dc77062"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'linuxX64' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/kotlin/multiplatform/targets/HubdleKotlinMultiplatformLinuxExtension.kt",
      "language": "kotlin",
      "line": 87,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 85,
        "length": 6,
        "offset": 11,
        "surroundingCode": "    }\n\n    public val linuxX64: KotlinMultiplatformLinuxX64Extension\n        get() = getHubdleExtension()\n"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "2d680a9c4c6fba3e34e223b7c7209adc162db5c90e08254c7836736fdc21371b"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'linuxMipsel32' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/kotlin/multiplatform/targets/HubdleKotlinMultiplatformLinuxExtension.kt",
      "language": "kotlin",
      "line": 77,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 75,
        "length": 6,
        "offset": 11,
        "surroundingCode": "    }\n\n    public val linuxMipsel32: KotlinMultiplatformLinuxMipsel32Extension\n        get() = getHubdleExtension()\n"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "7bf0bfe5f4cfae3678227bd285c014434c6566fc6b5c87843025fe4b0452e741"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'linuxMips32' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/kotlin/multiplatform/targets/HubdleKotlinMultiplatformLinuxExtension.kt",
      "language": "kotlin",
      "line": 69,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 67,
        "length": 6,
        "offset": 11,
        "surroundingCode": "    }\n\n    public val linuxMips32: KotlinMultiplatformLinuxMips32Extension\n        get() = getHubdleExtension()\n"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "f32be4be11093144a6a06f5bc9f382cbcc9a564f4f2bd36331089b8ea4877cdf"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Property \"hubdleGradleVersionCatalog\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/shared/features/gradle/HubdleGradleVersionCatalogFeatureExtension.kt",
      "language": "kotlin",
      "line": 73,
      "offset": 40,
      "length": 26,
      "code": {
        "startLine": 71,
        "length": 26,
        "offset": 42,
        "surroundingCode": "}\n\ninternal val HubdleEnableableExtension.hubdleGradleVersionCatalog:\n    HubdleGradleVersionCatalogFeatureExtension\n    get() = getHubdleExtension()"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "b4506897fe881bf2ee57b0a8b141e8f08cc162fd9806d524ab46ee7e0b6e9941"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Property \"hubdleGradlePluginFeature\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/shared/features/intellij/HubdleIntellijPluginFeatureExtension.kt",
      "language": "kotlin",
      "line": 198,
      "offset": 40,
      "length": 25,
      "code": {
        "startLine": 196,
        "length": 25,
        "offset": 42,
        "surroundingCode": "}\n\ninternal val HubdleEnableableExtension.hubdleGradlePluginFeature:\n    HubdleIntellijPluginFeatureExtension\n    get() = getHubdleExtension()"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "018cc4598523882c985ab79f40054220cbea146cd2da63f8a0444fb854e44e71"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Class \"JavaTestFixtures\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/_internal/PluginId.kt",
      "language": "kotlin",
      "line": 15,
      "offset": 5,
      "length": 16,
      "code": {
        "startLine": 13,
        "length": 16,
        "offset": 104,
        "surroundingCode": "    GradleVersionCatalog(\"org.gradle.version-catalog\"),\n    JavaGradlePlugin(\"java-gradle-plugin\"),\n    JavaTestFixtures(\"java-test-fixtures\"),\n    JavierscSemverGradlePlugin(\"com.javiersc.semver.gradle.plugin\"),\n    JetbrainsChangelog(\"org.jetbrains.changelog\"),"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "87348f68c3592cc278c9627e17d21c8fb8981fe4b7bd9bc77e2053ec7626fb9b"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Class \"GradlePluginPublish\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/_internal/PluginId.kt",
      "language": "kotlin",
      "line": 11,
      "offset": 5,
      "length": 19,
      "code": {
        "startLine": 9,
        "length": 19,
        "offset": 130,
        "surroundingCode": "    GithubGradleNexusPublishPlugin(\"io.github.gradle-nexus.publish-plugin\"),\n    GradleApplication(\"org.gradle.application\"),\n    GradlePluginPublish(\"com.gradle.plugin-publish\"),\n    GradleSigning(\"org.gradle.signing\"),\n    GradleVersionCatalog(\"org.gradle.version-catalog\"),"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "570522900f9138118c469762eeef4d20917cb6eba8e49494c4cf6fdeb2d0edab"
}]}