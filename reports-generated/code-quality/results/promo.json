{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "tags": [
    "kotlin"
  ],
  "severity": "Info",
  "comment": "Property 'value' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "method",
      "path": "plugins/documentation/changelog/main/kotlin/com/javiersc/gradle/plugins/changelog/internal/Changelog.kt",
      "language": "kotlin",
      "line": 50,
      "offset": 36,
      "length": 5,
      "code": {
        "startLine": 48,
        "length": 5,
        "offset": 51,
        "surroundingCode": "            }\n\n            internal class Item(val value: String) {\n\n                override fun toString(): String = value"
      }
    }
  ],
  "attributes": {
    "module": "gradle-plugins.plugins.documentation.changelog.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "6653702043426251215"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"sonatypeSnapshots\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "method",
      "path": "shared/core/main/kotlin/com/javiersc/gradle/plugins/core/SonatypeSnapshot.kt",
      "language": "kotlin",
      "line": 6,
      "offset": 22,
      "length": 17,
      "code": {
        "startLine": 4,
        "length": 17,
        "offset": 58,
        "surroundingCode": "import org.gradle.kotlin.dsl.maven\n\nfun RepositoryHandler.sonatypeSnapshots() {\n    maven(url = \"https://oss.sonatype.org/content/repositories/snapshots/\")\n}"
      }
    }
  ],
  "attributes": {
    "module": "gradle-plugins.shared.core.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "-2725954229123065596"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"hasSigningKeyNameGradleProperty\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "method",
      "path": "plugins/publish/publish/main/kotlin/com/javiersc/gradle/plugins/publish/internal/SigningExtensions.kt",
      "language": "kotlin",
      "line": 35,
      "offset": 30,
      "length": 31,
      "code": {
        "startLine": 33,
        "length": 31,
        "offset": 108,
        "surroundingCode": "    get() = project.getVariable(\"signing.gnupg.keyName\", \"SIGNING_KEY_NAME\")\n\ninternal val SigningExtension.hasSigningKeyNameGradleProperty: Boolean\n    get() = project.properties[\"signing.gnupg.keyName\"]?.toString().isNullOrBlank().not()\n"
      }
    }
  ],
  "attributes": {
    "module": "gradle-plugins.plugins.publish.publish.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "5227960149050490724"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"hasSigningKeyEnvironmentVariable\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "method",
      "path": "plugins/publish/publish/main/kotlin/com/javiersc/gradle/plugins/publish/internal/SigningExtensions.kt",
      "language": "kotlin",
      "line": 65,
      "offset": 30,
      "length": 32,
      "code": {
        "startLine": 63,
        "length": 32,
        "offset": 117,
        "surroundingCode": "    get() = project.properties[\"signing.gnupg.key\"]?.toString().isNullOrBlank().not()\n\ninternal val SigningExtension.hasSigningKeyEnvironmentVariable: Boolean\n    get() = System.getenv(\"SIGNING_KEY\").isNullOrBlank().not()"
      }
    }
  ],
  "attributes": {
    "module": "gradle-plugins.plugins.publish.publish.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "6410767827223681843"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"hasSigningKeyNameEnvironmentVariable\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "method",
      "path": "plugins/publish/publish/main/kotlin/com/javiersc/gradle/plugins/publish/internal/SigningExtensions.kt",
      "language": "kotlin",
      "line": 38,
      "offset": 30,
      "length": 36,
      "code": {
        "startLine": 36,
        "length": 36,
        "offset": 121,
        "surroundingCode": "    get() = project.properties[\"signing.gnupg.keyName\"]?.toString().isNullOrBlank().not()\n\ninternal val SigningExtension.hasSigningKeyNameEnvironmentVariable: Boolean\n    get() = System.getenv(\"SIGNING_KEY_NAME\").isNullOrBlank().not()\n"
      }
    }
  ],
  "attributes": {
    "module": "gradle-plugins.plugins.publish.publish.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "1736665214696424162"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"hasSigningKeyPassphraseEnvironmentVariable\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "method",
      "path": "plugins/publish/publish/main/kotlin/com/javiersc/gradle/plugins/publish/internal/SigningExtensions.kt",
      "language": "kotlin",
      "line": 56,
      "offset": 30,
      "length": 42,
      "code": {
        "startLine": 54,
        "length": 42,
        "offset": 124,
        "surroundingCode": "    get() = project.properties[\"signing.gnupg.passphrase\"]?.toString().isNullOrBlank().not()\n\ninternal val SigningExtension.hasSigningKeyPassphraseEnvironmentVariable: Boolean\n    get() = System.getenv(\"SIGNING_KEY_PASSPHRASE\").isNullOrBlank().not()\n"
      }
    }
  ],
  "attributes": {
    "module": "gradle-plugins.plugins.publish.publish.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "-1782327754858912516"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"hasSigningKeyPassphraseGradleProperty\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "method",
      "path": "plugins/publish/publish/main/kotlin/com/javiersc/gradle/plugins/publish/internal/SigningExtensions.kt",
      "language": "kotlin",
      "line": 53,
      "offset": 30,
      "length": 37,
      "code": {
        "startLine": 51,
        "length": 37,
        "offset": 117,
        "surroundingCode": "    get() = project.getVariable(\"signing.gnupg.passphrase\", \"SIGNING_KEY_PASSPHRASE\")\n\ninternal val SigningExtension.hasSigningKeyPassphraseGradleProperty: Boolean\n    get() = project.properties[\"signing.gnupg.passphrase\"]?.toString().isNullOrBlank().not()\n"
      }
    }
  ],
  "attributes": {
    "module": "gradle-plugins.plugins.publish.publish.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "6588520914498223560"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"signingKeyName\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "method",
      "path": "plugins/publish/publish/main/kotlin/com/javiersc/gradle/plugins/publish/internal/SigningExtensions.kt",
      "language": "kotlin",
      "line": 32,
      "offset": 30,
      "length": 14,
      "code": {
        "startLine": 30,
        "length": 14,
        "offset": 111,
        "surroundingCode": "    get() = project.version.toString().endsWith(\"-SNAPSHOT\", ignoreCase = true)\n\ninternal val SigningExtension.signingKeyName: String?\n    get() = project.getVariable(\"signing.gnupg.keyName\", \"SIGNING_KEY_NAME\")\n"
      }
    }
  ],
  "attributes": {
    "module": "gradle-plugins.plugins.publish.publish.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "-5013644022149716800"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"hasSigningKeyGradleProperty\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "method",
      "path": "plugins/publish/publish/main/kotlin/com/javiersc/gradle/plugins/publish/internal/SigningExtensions.kt",
      "language": "kotlin",
      "line": 62,
      "offset": 30,
      "length": 27,
      "code": {
        "startLine": 60,
        "length": 27,
        "offset": 99,
        "surroundingCode": "    get() = project.getVariable(\"signing.gnupg.key\", \"SIGNING_KEY\")\n\ninternal val SigningExtension.hasSigningKeyGradleProperty: Boolean\n    get() = project.properties[\"signing.gnupg.key\"]?.toString().isNullOrBlank().not()\n"
      }
    }
  ],
  "attributes": {
    "module": "gradle-plugins.plugins.publish.publish.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "-382433569167145878"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Class \"ReadmeBadgesGeneratorPlugin\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "class",
      "path": "plugins/documentation/readme-badges/main/kotlin/com/javiersc/gradle/plugins/readme/badges/generator/ReadmeBadgesGeneratorPlugin.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 15,
      "length": 27,
      "code": {
        "startLine": 7,
        "length": 27,
        "offset": 81,
        "surroundingCode": "import org.jetbrains.kotlin.gradle.plugin.getKotlinPluginVersion\n\nabstract class ReadmeBadgesGeneratorPlugin : Plugin<Project> {\n\n    @OptIn(ExperimentalStdlibApi::class)"
      }
    }
  ],
  "attributes": {
    "module": "gradle-plugins.plugins.documentation.readme-badges.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "-5260920796929894390"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"javiersc-all-projects\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "method",
      "path": "all-plugins/main/kotlin/AllProjectsAccessors.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 27,
      "length": 23,
      "code": {
        "startLine": 7,
        "length": 23,
        "offset": 65,
        "surroundingCode": "    get() = javiersc(\"all.projects\")\n\nfun PluginDependenciesSpec.`javiersc-all-projects`(\n    version: String,\n): PluginDependencySpec = javiersc(\"all.projects\", version)"
      }
    }
  ],
  "attributes": {
    "module": "gradle-plugins.all-plugins.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "-264167033525173686"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"javiersc-all-projects\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "method",
      "path": "all-plugins/main/kotlin/AllProjectsAccessors.kt",
      "language": "kotlin",
      "line": 6,
      "offset": 27,
      "length": 23,
      "code": {
        "startLine": 4,
        "length": 23,
        "offset": 78,
        "surroundingCode": "import org.gradle.plugin.use.PluginDependencySpec\n\nval PluginDependenciesSpec.`javiersc-all-projects`: PluginDependencySpec\n    get() = javiersc(\"all.projects\")\n"
      }
    }
  ],
  "attributes": {
    "module": "gradle-plugins.all-plugins.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "-7667945930272943535"
}]}