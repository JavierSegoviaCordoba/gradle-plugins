{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'hubdleState' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/apis/HubdleEnableableExtension.kt",
      "language": "kotlin",
      "line": 37,
      "offset": 5,
      "length": 8,
      "code": {
        "startLine": 35,
        "length": 8,
        "offset": 32,
        "surroundingCode": "        get() = emptySet()\n\n    internal val hubdleState: HubdleState\n        get() = project.hubdleState\n"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "df9c0df4f9b26e5b40318c7cebd2d797d6fd4660b393a416e3c7ab7b8ab2663d"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'applicationId' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/kotlin/android/application/HubdleKotlinAndroidApplicationExtension.kt",
      "language": "kotlin",
      "line": 45,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 43,
        "length": 6,
        "offset": 42,
        "surroundingCode": "        get() = getHubdleExtension()\n\n    public val applicationId: Property<String?> = property { hubdleAndroid.namespace.get() }\n\n    public val versionCode: Property<Int> = property { 1 }"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "d64c5c2aca5bd08ca5cd0d53d4d7022c3f1a52e1202dc8b8f31ed4d70e394cff"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'versionName' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/kotlin/android/application/HubdleKotlinAndroidApplicationExtension.kt",
      "language": "kotlin",
      "line": 49,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 47,
        "length": 6,
        "offset": 64,
        "surroundingCode": "    public val versionCode: Property<Int> = property { 1 }\n\n    public val versionName: Property<String?> = property { \"0.1.0\" }\n\n    @HubdleDslMarker"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "b46e56c0bcfe7769982d0e3c797dc8c4e939cdf199d10d21659f78a76fa6e81c"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'versionCode' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/kotlin/android/application/HubdleKotlinAndroidApplicationExtension.kt",
      "language": "kotlin",
      "line": 47,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 45,
        "length": 6,
        "offset": 98,
        "surroundingCode": "    public val applicationId: Property<String?> = property { hubdleAndroid.namespace.get() }\n\n    public val versionCode: Property<Int> = property { 1 }\n\n    public val versionName: Property<String?> = property { \"0.1.0\" }"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "fcaf365b48e1f92b2bc257c299974f7641b32909dabc01950540d89c48eeacd4"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'allEnabled' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/kotlin/multiplatform/targets/HubdleKotlinMultiplatformAppleExtension.kt",
      "language": "kotlin",
      "line": 39,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 37,
        "length": 6,
        "offset": 51,
        "surroundingCode": "    override val targetName: String = \"apple\"\n\n    public val allEnabled: Property<Boolean> = property { false }\n\n    @HubdleDslMarker"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "34193e75894a90546c2c082b22a4d2d6ba1f162eb75b1dd90bedb705c3bec91c"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'tags' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/shared/features/gradle/HubdleGradlePluginFeatureExtension.kt",
      "language": "kotlin",
      "line": 44,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 42,
        "length": 6,
        "offset": 55,
        "surroundingCode": "    override val priority: Priority = Priority.P4\n\n    public val tags: SetProperty<String> = setProperty { emptySet() }\n\n    @HubdleDslMarker"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "ae3e159e1df905d004d07c65fc807400dcaff0c0656496cb52d4caec8147d1ee"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'pluginUnderTestDependencies' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/shared/features/gradle/HubdleGradlePluginFeatureExtension.kt",
      "language": "kotlin",
      "line": 56,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 54,
        "length": 6,
        "offset": 11,
        "surroundingCode": "    }\n\n    public val pluginUnderTestDependencies: ListProperty<MinimalExternalModuleDependency> =\n        listProperty {\n            emptyList()"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "0fa367084310d60533837ad368faca6b48b4646fe09e85061bf752911baf0f9c"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Property \"hubdleAndroidLibraryFeatures\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/kotlin/android/library/features/HubdleKotlinAndroidLibraryFeaturesExtension.kt",
      "language": "kotlin",
      "line": 44,
      "offset": 40,
      "length": 28,
      "code": {
        "startLine": 42,
        "length": 28,
        "offset": 87,
        "surroundingCode": "    HubdleJvmToolchainDelegateFeatureExtension\n\ninternal val HubdleEnableableExtension.hubdleAndroidLibraryFeatures:\n    HubdleKotlinAndroidLibraryExtension\n    get() = getHubdleExtension()"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "69dfef3c6b2800ccf2557c6c9a2f10522a4c9f85609777e46faec5acf88c04a3"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Property \"hubdleKotestFeature\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/kotlin/features/shared/HubdleKotlinKotestFeatureExtension.kt",
      "language": "kotlin",
      "line": 52,
      "offset": 40,
      "length": 19,
      "code": {
        "startLine": 50,
        "length": 19,
        "offset": 42,
        "surroundingCode": "}\n\ninternal val HubdleEnableableExtension.hubdleKotestFeature: HubdleKotlinKotestFeatureExtension\n    get() = getHubdleExtension()\n"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "1f863c0925b7e016954be19b3b89f2bdcc1eac1c0ff550e50ca7bac69d02e991"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Property \"hubdleGradlePluginFeature\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/shared/features/gradle/HubdleGradlePluginFeatureExtension.kt",
      "language": "kotlin",
      "line": 131,
      "offset": 40,
      "length": 25,
      "code": {
        "startLine": 129,
        "length": 25,
        "offset": 42,
        "surroundingCode": "}\n\ninternal val HubdleEnableableExtension.hubdleGradlePluginFeature: HubdleGradlePluginFeatureExtension\n    get() = getHubdleExtension()\n"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "0ead82df0ebbe8630e1181b117f2feab49918fab019d29ebc627a7383c66431f"
}]}