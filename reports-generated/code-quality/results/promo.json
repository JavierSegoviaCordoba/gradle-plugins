{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Naming conventions",
  "type": "Property naming convention",
  "severity": "Moderate",
  "comment": "Property name 'MySqlDialect' should start with a lowercase letter",
  "detailsInfo": "Reports property names that do not follow the recommended naming conventions.\n\n\nConsistent naming allows for easier code reading and understanding.\nAccording to the [Kotlin official style guide](https://kotlinlang.org/docs/coding-conventions.html#naming-rules),\nproperty names should start with a lowercase letter and use camel case.\n\nIt is possible to introduce other naming rules by changing the \"Pattern\" regular expression.\n\n**Example:**\n\n\n      val My_Cool_Property = \"\"\n\nA quick-fix renames the class according to the Kotlin naming conventions:\n\n\n      val myCoolProperty = \"\"\n",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-project-gradle-plugin/main/kotlin/com/javiersc/hubdle/project/extensions/kotlin/features/shared/HubdleKotlinSqlDelightFeatureExtension.kt",
      "language": "kotlin",
      "line": 50,
      "offset": 16,
      "length": 12,
      "code": {
        "startLine": 48,
        "length": 12,
        "offset": 107,
        "surroundingCode": "    public val HSqlDialect: String = \"app.cash.sqldeight:hsql-dialect:$SQLDELIGHT_VERSION\"\n\n    public val MySqlDialect: String = \"app.cash.sqldeight:mysql-dialect:$SQLDELIGHT_VERSION\"\n\n    public val PostgresDialect: String = \"app.cash.sqldeight:postgres-dialect:$SQLDELIGHT_VERSION\""
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-project-gradle-plugin.main",
    "inspectionName": "PropertyName"
  },
  "hash": "f5e8a523771a42c7204eb7f085f069bd64faa855e0aebf6ee7d885204f78466e"
},{
  "tool": "Code Inspection",
  "category": "Naming conventions",
  "type": "Property naming convention",
  "severity": "Moderate",
  "comment": "Property name 'PostgresDialect' should start with a lowercase letter",
  "detailsInfo": "Reports property names that do not follow the recommended naming conventions.\n\n\nConsistent naming allows for easier code reading and understanding.\nAccording to the [Kotlin official style guide](https://kotlinlang.org/docs/coding-conventions.html#naming-rules),\nproperty names should start with a lowercase letter and use camel case.\n\nIt is possible to introduce other naming rules by changing the \"Pattern\" regular expression.\n\n**Example:**\n\n\n      val My_Cool_Property = \"\"\n\nA quick-fix renames the class according to the Kotlin naming conventions:\n\n\n      val myCoolProperty = \"\"\n",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-project-gradle-plugin/main/kotlin/com/javiersc/hubdle/project/extensions/kotlin/features/shared/HubdleKotlinSqlDelightFeatureExtension.kt",
      "language": "kotlin",
      "line": 52,
      "offset": 16,
      "length": 15,
      "code": {
        "startLine": 50,
        "length": 15,
        "offset": 109,
        "surroundingCode": "    public val MySqlDialect: String = \"app.cash.sqldeight:mysql-dialect:$SQLDELIGHT_VERSION\"\n\n    public val PostgresDialect: String = \"app.cash.sqldeight:postgres-dialect:$SQLDELIGHT_VERSION\"\n\n    override fun Project.defaultConfiguration() {"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-project-gradle-plugin.main",
    "inspectionName": "PropertyName"
  },
  "hash": "f0934b102ce7c8a2218c641ec20b7276a0726946f24fc072c6b8d58ebc9777ed"
},{
  "tool": "Code Inspection",
  "category": "Naming conventions",
  "type": "Property naming convention",
  "severity": "Moderate",
  "comment": "Property name 'HSqlDialect' should start with a lowercase letter",
  "detailsInfo": "Reports property names that do not follow the recommended naming conventions.\n\n\nConsistent naming allows for easier code reading and understanding.\nAccording to the [Kotlin official style guide](https://kotlinlang.org/docs/coding-conventions.html#naming-rules),\nproperty names should start with a lowercase letter and use camel case.\n\nIt is possible to introduce other naming rules by changing the \"Pattern\" regular expression.\n\n**Example:**\n\n\n      val My_Cool_Property = \"\"\n\nA quick-fix renames the class according to the Kotlin naming conventions:\n\n\n      val myCoolProperty = \"\"\n",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-project-gradle-plugin/main/kotlin/com/javiersc/hubdle/project/extensions/kotlin/features/shared/HubdleKotlinSqlDelightFeatureExtension.kt",
      "language": "kotlin",
      "line": 48,
      "offset": 16,
      "length": 11,
      "code": {
        "startLine": 46,
        "length": 11,
        "offset": 22,
        "surroundingCode": "    }\n\n    public val HSqlDialect: String = \"app.cash.sqldeight:hsql-dialect:$SQLDELIGHT_VERSION\"\n\n    public val MySqlDialect: String = \"app.cash.sqldeight:mysql-dialect:$SQLDELIGHT_VERSION\""
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-project-gradle-plugin.main",
    "inspectionName": "PropertyName"
  },
  "hash": "2a673ac92b5ba6f108d88c9644eb5ff6cf7c50cc1f3d67210dcc37cab9a954b7"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'json' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-project-gradle-plugin/main/kotlin/com/javiersc/hubdle/project/extensions/kotlin/features/shared/HubdleKotlinSerializationFeatureExtension.kt",
      "language": "kotlin",
      "line": 37,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 35,
        "length": 6,
        "offset": 55,
        "surroundingCode": "    override val priority: Priority = Priority.P4\n\n    public val json: Property<Boolean> = property { true }\n\n    override fun Project.defaultConfiguration() {"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-project-gradle-plugin.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "81cc186e42d42a0732c4c59ccec83b885d71cf519d8ca670d280206513f7d5d6"
}]}