{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'binaryCompatibilityValidator' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/config/HubdleConfigExtension.kt",
      "language": "kotlin",
      "line": 43,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 41,
        "length": 6,
        "offset": 11,
        "surroundingCode": "    }\n\n    public val binaryCompatibilityValidator: HubdleConfigBinaryCompatibilityValidatorExtension\n        get() = getHubdleExtension()\n"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "4e2911f3f5d5f953dd3b1fbe7145ffcfea2027b90d68d2bd2d26b10321bb5361"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'macosArm64' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/kotlin/multiplatform/targets/HubdleKotlinMultiplatformMacOSExtension.kt",
      "language": "kotlin",
      "line": 48,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 46,
        "length": 6,
        "offset": 54,
        "surroundingCode": "        get() = setOf(hubdleKotlinMultiplatform)\n\n    public val macosArm64: HubdleKotlinMultiplatformMacOSArm64Extension\n        get() = getHubdleExtension()\n"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "295193f4f80cd18f78acf34d70bc412913dca276843cdfed05dca629ae21e593"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'macosX64' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/kotlin/multiplatform/targets/HubdleKotlinMultiplatformMacOSExtension.kt",
      "language": "kotlin",
      "line": 58,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 56,
        "length": 6,
        "offset": 11,
        "surroundingCode": "    }\n\n    public val macosX64: HubdleKotlinMultiplatformMacOSX64Extension\n        get() = getHubdleExtension()\n"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "aaee3768a9b98b83141bf4e1dd6986ad3ac0360c4fec9d3ca48c9ab508aa12ac"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'allEnabled' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/kotlin/multiplatform/targets/HubdleKotlinMultiplatformMacOSExtension.kt",
      "language": "kotlin",
      "line": 38,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 36,
        "length": 6,
        "offset": 51,
        "surroundingCode": "    override val targetName: String = \"macos\"\n\n    public val allEnabled: Property<Boolean> = property { false }\n\n    @HubdleDslMarker"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "cdb9cc4a2e819b1a5637423f69b070ab0a4a8f2b228d73c41c7a851145840bbf"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'tags' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/shared/features/gradle/HubdleGradlePluginFeatureExtension.kt",
      "language": "kotlin",
      "line": 62,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 60,
        "length": 6,
        "offset": 11,
        "surroundingCode": "    }\n\n    public val tags: SetProperty<String> = setProperty { emptySet() }\n\n    @HubdleDslMarker"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "6dfc90d56bcc038211bfdf2b74899a90986e087de95bff59132bddad04029bab"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'pluginUnderTestDependencies' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/shared/features/gradle/HubdleGradlePluginFeatureExtension.kt",
      "language": "kotlin",
      "line": 74,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 72,
        "length": 6,
        "offset": 11,
        "surroundingCode": "    }\n\n    public val pluginUnderTestDependencies: ListProperty<MinimalExternalModuleDependency> =\n        listProperty {\n            emptyList()"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "dbcbeb4f60c014f0110d096598a7e003c3e7f6d3ef3668c23a84e94742b46714"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'extendedGradle' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/shared/features/gradle/HubdleGradlePluginFeatureExtension.kt",
      "language": "kotlin",
      "line": 55,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 53,
        "length": 6,
        "offset": 55,
        "surroundingCode": "    override val priority: Priority = Priority.P4\n\n    public val extendedGradle: Property<Boolean> = property { true }\n\n    @HubdleDslMarker"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "19d938aa06b43b18b0b4f43608ab3ef7403bb4311f8b8b2ef5a4b8d1137a6c41"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Property \"hubdleNexus\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/config/nexus/HubdleConfigNexusExtension.kt",
      "language": "kotlin",
      "line": 88,
      "offset": 40,
      "length": 11,
      "code": {
        "startLine": 86,
        "length": 11,
        "offset": 42,
        "surroundingCode": "}\n\ninternal val HubdleEnableableExtension.hubdleNexus: HubdleConfigNexusExtension\n    get() = getHubdleExtension()\n"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "7c1c127aba35c823acbc4a6133546e966944ea1eedb47fc4028bdcfe834876bd"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Property \"hubdleKotlinJvmFeatures\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "hubdle-gradle-plugin/main/kotlin/com/javiersc/hubdle/extensions/kotlin/jvm/features/HubdleKotlinJvmFeaturesExtension.kt",
      "language": "kotlin",
      "line": 49,
      "offset": 40,
      "length": 23,
      "code": {
        "startLine": 47,
        "length": 23,
        "offset": 87,
        "surroundingCode": "    HubdleJvmToolchainDelegateFeatureExtension\n\ninternal val HubdleEnableableExtension.hubdleKotlinJvmFeatures: HubdleKotlinJvmFeaturesExtension\n    get() = getHubdleExtension()\n"
      }
    }
  ],
  "attributes": {
    "module": "hubdle.hubdle-gradle-plugin.main",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "9daa5be3a515ea76e2bfcad68cba6cd9f223ddea534d7586500c7498468908b4"
}]}