{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused receiver parameter",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Receiver parameter is never used",
  "detailsInfo": "Reports receiver parameter of extension functions and properties that is not used.\n\n**Remove redundant receiver parameter** can be used to amend the code automatically.",
  "sources": [
    {
      "type": "method",
      "path": "plugins/publish/publish/main/kotlin/com/javiersc/gradle/plugins/publish/internal/SigningExtensions.kt",
      "language": "kotlin",
      "line": 47,
      "offset": 13,
      "length": 16,
      "code": {
        "startLine": 45,
        "length": 16,
        "offset": 102,
        "surroundingCode": "    get() = project.properties[\"signing.gnupg.keyId\"]?.toString().isNullOrBlank().not()\n\ninternal val SigningExtension.hasSigningKeyIdEnvironmentVariable: Boolean\n    get() = System.getenv(\"SIGNING_KEY_ID\").isNullOrBlank().not()\n"
      }
    }
  ],
  "attributes": {
    "module": "gradle-plugins.plugins.publish.publish.main",
    "inspectionName": "UnusedReceiverParameter"
  },
  "hash": "3637938371287820499"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused receiver parameter",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Receiver parameter is never used",
  "detailsInfo": "Reports receiver parameter of extension functions and properties that is not used.\n\n**Remove redundant receiver parameter** can be used to amend the code automatically.",
  "sources": [
    {
      "type": "method",
      "path": "plugins/publish/publish/main/kotlin/com/javiersc/gradle/plugins/publish/internal/SigningExtensions.kt",
      "language": "kotlin",
      "line": 56,
      "offset": 13,
      "length": 16,
      "code": {
        "startLine": 54,
        "length": 16,
        "offset": 107,
        "surroundingCode": "    get() = project.properties[\"signing.gnupg.passphrase\"]?.toString().isNullOrBlank().not()\n\ninternal val SigningExtension.hasSigningKeyPassphraseEnvironmentVariable: Boolean\n    get() = System.getenv(\"SIGNING_KEY_PASSPHRASE\").isNullOrBlank().not()\n"
      }
    }
  ],
  "attributes": {
    "module": "gradle-plugins.plugins.publish.publish.main",
    "inspectionName": "UnusedReceiverParameter"
  },
  "hash": "-8118152144995351515"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused receiver parameter",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Receiver parameter is never used",
  "detailsInfo": "Reports receiver parameter of extension functions and properties that is not used.\n\n**Remove redundant receiver parameter** can be used to amend the code automatically.",
  "sources": [
    {
      "type": "method",
      "path": "plugins/publish/publish/main/kotlin/com/javiersc/gradle/plugins/publish/internal/SigningExtensions.kt",
      "language": "kotlin",
      "line": 65,
      "offset": 13,
      "length": 16,
      "code": {
        "startLine": 63,
        "length": 16,
        "offset": 100,
        "surroundingCode": "    get() = project.properties[\"signing.gnupg.key\"]?.toString().isNullOrBlank().not()\n\ninternal val SigningExtension.hasSigningKeyEnvironmentVariable: Boolean\n    get() = System.getenv(\"SIGNING_KEY\").isNullOrBlank().not()"
      }
    }
  ],
  "attributes": {
    "module": "gradle-plugins.plugins.publish.publish.main",
    "inspectionName": "UnusedReceiverParameter"
  },
  "hash": "6614827840692727980"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused receiver parameter",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Receiver parameter is never used",
  "detailsInfo": "Reports receiver parameter of extension functions and properties that is not used.\n\n**Remove redundant receiver parameter** can be used to amend the code automatically.",
  "sources": [
    {
      "type": "method",
      "path": "plugins/publish/publish/main/kotlin/com/javiersc/gradle/plugins/publish/internal/SigningExtensions.kt",
      "language": "kotlin",
      "line": 38,
      "offset": 13,
      "length": 16,
      "code": {
        "startLine": 36,
        "length": 16,
        "offset": 104,
        "surroundingCode": "    get() = project.properties[\"signing.gnupg.keyName\"]?.toString().isNullOrBlank().not()\n\ninternal val SigningExtension.hasSigningKeyNameEnvironmentVariable: Boolean\n    get() = System.getenv(\"SIGNING_KEY_NAME\").isNullOrBlank().not()\n"
      }
    }
  ],
  "attributes": {
    "module": "gradle-plugins.plugins.publish.publish.main",
    "inspectionName": "UnusedReceiverParameter"
  },
  "hash": "7796472001316338549"
}]}